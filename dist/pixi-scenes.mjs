var c=Object.defineProperty;var h=(s,e,t)=>e in s?c(s,e,{enumerable:!0,configurable:!0,writable:!0,value:t}):s[e]=t;var n=(s,e,t)=>h(s,typeof e!="symbol"?e+"":e,t);import{Container as d,Ticker as l}from"https://cdn.jsdelivr.net/npm/pixi.js/dist/pixi.mjs";var r=class extends d{constructor(){super(...arguments);n(this,"manager",null)}init(){}*start(t,i){}tick(t){}*end(t){}},u=class{constructor(e){n(this,"currentScene",null);n(this,"_endAnimIter",null);n(this,"_queuedScene",null);n(this,"_queuedSceneMessage",null);n(this,"_startAnimIter",null);n(this,"_scenes",new Map);n(this,"ticker",l.shared);n(this,"app");n(this,"screen");this.app=e,this.screen=e.screen,this.ticker.add(function({deltaTime:t}){this._endAnimIter&&this._endAnimIter.next(t).done&&(this._endAnimIter=null,this.app.stage.removeChild(this.currentScene),this.currentScene=this._queuedScene,this.app.stage.addChild(this._queuedScene),this._startAnimIter=this.currentScene.start(t,this._queuedSceneMessage),this._queuedScene=this._queuedSceneMessage=null),this._startAnimIter&&this._startAnimIter.next(t).done&&(this._startAnimIter=null),this.currentScene&&this.currentScene.tick(t)}.bind(this))}register(e,t){t.manager=this,this._scenes.set(e,t),t.init()}changeSceneTo(e=null,t=null){if(this.currentScene){if(this._endAnimIter=this.currentScene.end(),this._queuedSceneMessage=t,e!==null){let i=this._scenes.get(e);if(!i)throw new Error(`Scene ${e} not found.`);this._queuedScene=i}}else if(e!==null){let i=this._scenes.get(e);if(!i)throw new Error(`Scene ${e} not found.`);this.currentScene=i,this.app.stage.addChild(i)}}};export{r as Scene,u as SceneManager};
//# sourceMappingURL=pixi-scenes.mjs.map
